@using SueChef.Models
@using SueChef.Controllers
@{
    ViewData["Title"] = "Home Page";
}

<!-- Defines the Model variable and what type it should be -->
@model IEnumerable<SueChef.ViewModels.RecipeCardViewModel>

<body class="bg-orange-50">

    <section class="mb-8">
        <h2 class="text-2xl text-center font-semibold mb-4">Batch cooking winners</h2>
        @{
            var verticalRecipes = Model;
        }

        <div class="relative">

            <!-- Left Button (&#8592 is the left arrow symbol) -->
            <button type="button" id="carousel-left"
                class="absolute left-0 top-1/2 -translate-y-1/2 bg-orange-100 hover:bg-orange-300 text-gray-700 rounded-full p-3 z-10 shadow-md">
                &#8592;
            </button>

            <!-- Carousel Track -->
            <div id="carousel-track"
                class="relative flex max-w-6xl mx-auto overflow-hidden scroll-smooth transition-all duration-500 gap-3">
                @foreach (var recipe in verticalRecipes)
                {
                    <partial name="_RecipeCardVerticalPartial" model="recipe" />
                }
            </div>

            <!-- Right Button (&#8594 is the right arrow symbol) -->
            <button type="button" id="carousel-right"
                class="absolute right-0 top-1/2 -translate-y-1/2 bg-orange-100 hover:bg-orange-300 text-gray-700 rounded-full p-3 z-10 shadow-md">&#8594;
            </button>
        </div>
    </section>

    <section class="mb-8">
        <h2 class="text-2xl text-center font-bold mb-4">Trending now</h2>
        @{
            var horizontalRecipes = Model.Skip(5).Take(5);
        }

        @foreach (var recipe in horizontalRecipes)
        {
            <partial name="_RecipeCardHorizontalPartial" model="recipe" />
        }
    </section>

    <!-- JS for carousel buttons -->
    <script>

        // Mobile shows one vertical card only
        let visibleCards = window.innerWidth < 640 ? 1 : window.innerWidth < 1024 ? 2 : 4;
        document.addEventListener("DOMContentLoaded", function () {
            const track = document.getElementById("carousel-track");
            const btnLeft = document.getElementById("carousel-left");
            const btnRight = document.getElementById("carousel-right");

            // One card width (including gap)
            const cardWidth = track.querySelector("div").offsetWidth + 16; // adjust gap

            const visibleCards = 4;


            btnRight.addEventListener("click", () => {
                track.scrollBy({ left: cardWidth * visibleCards, behavior: "smooth" });
            });

            btnLeft.addEventListener("click", () => {
                track.scrollBy({ left: -cardWidth * visibleCards, behavior: "smooth" });
            });
        });
    </script>

</body>
@model SueChef.ViewModels.SearchPageViewModel

<body class="min-h-screen bg-orange-50">
    <div class="max-w-screen-lg mx-auto p-4">
    <div class="flex flex-col mb-8">
        <!-- This bit is the search bar -->
        <div class="rounded-md border border-2 border-gray-200 bg-white p-6">
            <form method="get" action="/search" class="space-y-4">
                <div class="relative">
                    <input type="text" name="searchQuery" value="@Model.SearchQuery"
                        placeholder="Search recipes, ingredients or chefs..."
                        class="w-full rounded-md border border-gray-200 bg-gray-100 py-3 pl-10 pr-4 shadow-sm focus:border-rose-700 focus:ring focus:ring-rose-200" />
                    <svg class="absolute left-3 top-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg"
                        fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path
                            d="M10 2a8 8 0 105.293 14.293l4.707 4.707a1 1 0 001.414-1.414l-4.707-4.707A8 8 0 0010 2z" />                   
                            </svg>

                </div>

                <!-- This bit is where we start with the dropdown filters -->
                <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
                    <div class="flex flex-col">
                        <label for="category" class="text-sm font-medium text-stone-600">Category</label>
                        <select id="category" name="category"
                            class="block w-full rounded-md border border-gray-100 bg-gray-100 px-2 py-[9px] h-[42px] shadow-sm text-gray-700 focus:border-rose-700 focus:ring focus:ring-rose-200 focus:ring-opacity-50">
                            <option value="">Any category</option>
                            @foreach (var category in Model.AllCategories)
                            {
                                @:<option value="@category" @(Model.SearchCategory == category ? "selected" : "")>@category</option>
                            }
                        </select>
                    </div>

                    <!-- This one is kinda weird looking because it needs to be multi-select which is a bit more complicated apparently -->
                    <div class="flex flex-col relative">
                        <label for="ingredient" class="text-sm font-medium text-stone-600">Ingredient</label>

                        <button type="button" id="ingredientDropdown"
                            class="flex justify-between items-center w-full rounded-md border border-gray-100 bg-gray-100 px-2 py-[9px] h-[42px] shadow-sm text-gray-700 focus:border-rose-700 focus:ring focus:ring-rose-200 focus:ring-opacity-50 cursor-pointer select-none">
                            <span id="ingredientPlaceholder" class="truncate text-left">Select ingredients</span>
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-gray-600 -mr-2" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor" stroke-width="1">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
                            </svg>
                        </button>

                        <div id="ingredientList"
                            class="absolute top-full left-0 w-full mt-1 hidden rounded-md border border-gray-100 bg-white shadow-lg max-h-48 overflow-y-auto z-50">
                            @foreach (var ingredient in Model.AllIngredients)
                            {
                                <label
                                    class="flex items-center gap-2 px-3 py-1 text-sm text-gray-700 hover:bg-gray-50 cursor-pointer">
                                    <input type="checkbox" name="ingredients" value="@ingredient"
                                        class="accent-rose-700 cursor-pointer rounded focus:ring focus:ring-rose-200"@(Model.SelectedIngredients != null && Model.SelectedIngredients.Contains(ingredient) ? "checked" : "")/>
                                    @ingredient
                                </label>
                            }
                        </div>
                    </div>
        
                    <!-- Back to regular programming with the Chef's list -->
                    <div class="flex flex-col">
                        <label for="chef" class="text-sm font-medium text-stone-600">Chef Name</label>
                        <select id="chef" name="chef"
                            class="block w-full rounded-md border border-gray-100 bg-gray-100 px-2 py-[9px] h-[42px] shadow-sm text-gray-700 focus:border-rose-700 focus:ring focus:ring-rose-200 focus:ring-opacity-50">
                            <option value="">Any chef</option>
                            @foreach (var chef in Model.AllChefs)
                            {
                                @:<option value="@chef" @(Model.SearchChef == chef ? "selected" : "")>@chef</option>                  
                              }
                        </select>
                    </div>    

                    <div class="flex flex-col">
                        <span class="text-sm font-medium text-stone-600">Dietary</span>
                        <div class="mt-2 rounded-md border border-gray-100 bg-gray-100 px-2 py-[9px] shadow-sm text-gray-700">
                            <label class="flex items-center gap-2 text-sm text-gray-700">
                                <input
                                    type="checkbox"
                                    name="dietary"
                                    value="vegetarian"
                                    class="accent-rose-700 cursor-pointer rounded focus:ring focus:ring-rose-200"
                                    @(Model.DietarySelections.Contains("vegetarian") ? "checked" : "") />
                                Vegetarian
                            </label>

                            <label class="flex items-center gap-2 text-sm text-gray-700 mt-2">
                                <input
                                    type="checkbox"
                                    name="dietary"
                                    value="dairyfree"
                                    class="accent-rose-700 cursor-pointer rounded focus:ring focus:ring-rose-200"
                                    @(Model.DietarySelections.Contains("dairyfree") ? "checked" : "") />
                            Diary Free</label>
                        </div>
                        </div>
 
                        <div class="flex flex-col">
                            <label for="difficulty" class="text-sm font-medium text-stone-600">Difficulty</label>
                            <select id="difficulty" name="difficulty"
                                class="block w-full rounded-md border border-gray-100 bg-gray-100 px-2 py-[9px] h-[42px] shadow-sm text-gray-700 focus:border-rose-700 focus:ring focus:ring-rose-200 focus:ring-opacity-50">
                                <option value="">Any difficulty</option>

                                @foreach (var option in new[] {
                                    new { Value = 1, Label = "Easy" },
                                    new { Value = 2, Label = "Medium" },
                                    new { Value = 3, Label = "Hard" }
                                })
                                {
                                    @:<option value="@option.Value" @(Model.Difficulty == option.Value ? "selected" : "")>@option.Label</option>
                                }
                            </select>
                        </div>
                        <div class="flex flex-col">
                            <label for="duration" class="text-sm font-medium text-stone-600">Total Time</label>
                            <select id="duration" name="duration"
                                class="block w-full rounded-md border border-gray-100 bg-gray-100 px-2 py-[9px] h-[42px] shadow-sm text-gray-700 focus:border-rose-700 focus:ring focus:ring-rose-200 focus:ring-opacity-50">
                                <option value="">Any time</option>

                                @foreach (var option in new[] {
                                    new { Value = "under20", Label = "< 20 min" },
                                    new { Value = "20to40", Label = "20â€“40 min" },
                                    new { Value = "over40", Label = "> 40 min" }
                                })
                                {
                                    @:<option value="@option.Value" @(Model.DurationBucket == option.Value ? "selected" : "")>@option.Label</option>
                                }
                            </select>
                        </div>

                                                
                        </div>


                 <!-- This bit handles the submit and reset buttons -->
                <div class="mt-6 grid w-full grid-cols-2 justify-end space-x-4 md:flex">
                        <button type="submit"
                        class="rounded-lg bg-orange-600 px-4 py-2 font-medium text-white outline-none hover:opacity-80 focus:ring">Search</button> <button type="submit" name="clear" value="true"
                        class="rounded-lg bg-gray-200 px-4 py-2 font-medium text-gray-700 outline-none hover:opacity-80 focus:ring">Reset</button>
                </div>
            </form>
            </div>
        </div>
    </div>

    <!-- Printing the recipes IF there was a search query or filter put on -->
    
    @if (Model.Recipes.Any())
    {
        @foreach (var recipe in Model.Recipes)
        {
            <div class="pb-6">
                <partial name="_RecipeCardHorizontalPartial" model="recipe" />
            </div>
        }
    }
    else if (Model.HasSearch)
    {
        <p class="text-gray-500 text-center mt-6">No recipes found.</p>
    }

</div>
</body>


<script src="~/js/searchpage.js"></script>
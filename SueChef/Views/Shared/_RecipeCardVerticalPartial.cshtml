@model SueChef.ViewModels.RecipeCardViewModel

<div
    class="flex flex-col hover:shadow-md snap-center bg-white overflow-hidden transition-all duration-300 border-2 border-gray-200 mb-2 flex-shrink-0 h-full">

    <a asp-controller="RecipeDetails" asp-action="Index" asp-route-id="@Model.Id" class="flex flex-col ">


        <!-- Row one: picture -->
        <div class="w-full">
            <img src="@Model.RecipePicturePath" alt="Recipe Picture"
                class="w-full h-72 sm:h-96 md:h-52 lg:h-52 object-cover" />
        </div>

        <div class="flex-1 flex flex-col justify-between p-2 min-h-32">
            <!-- Row two: title -->
            <h3
                class="text-2xl text-gray-700 md:text-xl lg:text-xl line-clamp-2 font-medium hover:text-orange-800 transition mb-2 md:mb-1 min-h-16 md:min-h-16">
                @Model.Title
            </h3>

            <!-- Row three: stars -->
            <div class="flex items-center gap-1 mb-1 text-yellow-400">
                @{
                    double avg = Model.AverageRating ?? 0;
                    int fullStars = (int)Math.Floor(avg);
                    bool hasHalfStar = (avg - fullStars) >= 0.5;
                }

                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= fullStars)
                    {
                        <!-- full star -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-7 h-7 md:w-5 md:h-5 fill-yellow-400 stroke-yellow-400"
                            viewBox="0 0 24 24">
                            <path
                                d="M12 .587l3.668 7.431L24 9.751l-6 5.848 1.416 8.264L12 19.771l-7.416 4.092L6 15.599 0 9.751l8.332-1.733z" />
                        </svg>
                    }
                    else if (i == fullStars + 1 && hasHalfStar)
                    {
                        <!-- half star -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-7 h-7 md:w-5 md:h-5 fill-yellow-400 stroke-yellow-400"
                            viewBox="0 0 24 24">
                            <defs>
                                <linearGradient id="half">
                                    <stop offset="50%" stop-color="currentColor" />
                                    <stop offset="50%" stop-color="transparent" />
                                </linearGradient>
                            </defs>
                            <path fill="url(#half)" stroke="currentColor"
                                d="M12 .587l3.668 7.431L24 9.751l-6 5.848 1.416 8.264L12 19.771l-7.416 4.092L6 15.599 0 9.751l8.332-1.733z" />
                        </svg>
                    }
                    else
                    {
                        <!-- empty star -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-7 h-7 md:w-5 md:h-5 stroke-yellow-400" fill="none"
                            viewBox="0 0 24 24" stroke-width="2">
                            <path
                                d="M12 .587l3.668 7.431L24 9.751l-6 5.848 1.416 8.264L12 19.771l-7.416 4.092L6 15.599 0 9.751l8.332-1.733z" />
                        </svg>
                    }
                }
            </div>

            <!-- Row four: ratings -->
            @{string ratingText = $"{Model.RatingCount} rating{(Model.RatingCount != 1 ? "s" : "")}";}
            <div class="flex items-center text-gray-700 mb-1 text-lg md:text-sm lg:text-md">
                @ratingText
            </div>
        </div>

        <!-- Row five: tags bar -->
        <div
            class="flex flex-wrap justify-start items-center text-center border-t-2 border-gray-200 py-3 md:py-1 p-2 max-h-28 md:max-h-18">

            <div class="flex w-full">

                <!-- Time -->
                <div class="flex items-center flex-1 w-48 p-1 gap-1">
                    <i data-lucide="clock" class="w-6 h-6 text-gray-500"></i>
                    <span
                        class="text-md md:text-xs lg:text-xs text-gray-500 truncate tracking-tight">@Model.TotalTimeDisplay</span>
                </div>

                <!-- Difficulty -->
                <div class="flex items-center flex-1  max-w-[50%] p-1 gap-1">
                    <i data-lucide="chef-hat" class="w-6 h-6 text-gray-500"></i>
                    <span
                        class="text-md font-medium
                    @(Model.DifficultyLevel == 1 ? "text-green-600 md:text-xs lg:text-xs tracking-tight" : Model.DifficultyLevel == 2 ? "text-orange-500 md:text-xs lg:text-xs tracking-tight" : "text-red-600 md:text-xs lg:text-xs tracking-tight")">
                        @(Model.DifficultyLevel == 1 ? "Easy" :
                                                Model.DifficultyLevel == 2 ? "Medium" : "Hard")
                    </span>
                </div>
            </div>

            <div class="flex w-full">

                <!-- Dairy Free -->
                @if (@Model.IsDairyFree)
                {
                    <div class="flex items-center flex-1 min-w-[25%] max-w-[50%] p-1 gap-1">
                        <i data-lucide="milk-off" class="w-6 h-6 text-gray-500"></i>
                        <span class="text-md md:text-xs lg:text-xs text-gray-500 truncate tracking-tight">Dairy Free</span>
                    </div>
                }

                <!-- Vegetarian -->
                @if (@Model.IsVegetarian)
                {
                    <div class="flex items-center flex-1 min-w-[25%] max-w-[50%] p-1 gap-1">
                        <i data-lucide="vegan" class="w-6 h-6 text-gray-500"></i>
                        <span class="text-md md:text-xs lg:text-xs text-gray-500 truncate tracking-tight">Vegetarian</span>
                    </div>
                }
            </div>

        </div>
    </a>
</div>
@model SueChef.ViewModels.MealPlanViewModel

<!-- Card Container -->
<div
    class="relative group hover:shadow-md w-full h-full max-w-4xl bg-white rounded-md overflow-hidden border-2 border-gray-200 p-1 md:p-3 transition-all duration-300">

    <!-- 3 Dots Menu -->
    <div class="absolute top-2 right-2">
        <button type="button" class="text-gray-500 hover:text-gray-700 p-2 rounded-full transition"
            onclick="toggleMenu(this)">
            <i data-lucide="more-horizontal" class="w-5 h-5"></i>
        </button>

        <!-- Hidden dropdown -->
        <div class="hidden absolute right-0 mt-2 w-40 bg-white border border-gray-200 rounded-md shadow-lg z-10">
            <form asp-controller="MealPlan" asp-action="ShowShoppingList" asp-route-id="@Model.Id" method="get">
                <button type="submit" class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50">
                    ðŸ›’ Shopping List
                </button>
            </form>
            <form asp-controller="MealPlan" asp-action="DeleteMealPlan" asp-route-id="@Model.Id" method="post"
                onsubmit="return confirm('Are you sure you want to delete this meal plan?');">
                @Html.AntiForgeryToken()
                <button type="submit" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50">
                    ðŸ—‘ Delete
                </button>
            </form>
        </div>
    </div>

    <!-- Left column: clickable image -->
    <a asp-controller="MealPlan" asp-action="Show" asp-route-id="@Model.Id"
        class="block w-full h-[70%] overflow-hidden">

        <!-- Logic for choosing recipe images -->
        @if (Model.RecipePicturePaths != null && Model.RecipePicturePaths.Count > 0)
        {
            var imageCount = Model.RecipePicturePaths.Count;

            if (imageCount == 1)
            {
                <!-- Just one image fills the whole box: -->
                <img src="@Model.RecipePicturePaths[0]" alt="Meal Plan Image"
                    class="w-full h-full object-cover rounded-md border border-gray-300" />
            }

            else if (imageCount == 2)
            {
                <!-- Create 2x1 grid and display both images: -->
                <div class="grid grid-cols-2 grid-rows-1 w-full h-full rounded-md border border-gray-300 overflow-hidden">
                    @foreach (var path in Model.RecipePicturePaths.Take(4))
                    {
                        <div class="w-full h-full">
                            <img src="@path" alt="Recipe Image" class="w-full h-full object-cover" />
                        </div>
                    }
                </div>
            }

            else
            {
                <!-- Create a grid of up to 4 images -->
                <div class="grid grid-cols-2 grid-rows-2 w-full h-full rounded-md border border-gray-300 overflow-hidden">
                    @foreach (var path in Model.RecipePicturePaths.Take(4))
                    {
                        <div class="w-full h-full">
                            <img src="@path" alt="Recipe Image" class="w-full h-full object-cover" />
                        </div>
                    }

                    @if (imageCount == 3)
                    {
                        <!-- If only 3 recipes, add a placeholder for the 4th box -->
                        <div class="w-full h-full bg-gray-100 flex items-center justify-center">
                            <img src="/images/Placeholder_Meal.jpg" alt="Placeholder"
                                class="w-full h-full object-cover opacity-50" />
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <!-- No recipes yet = just show placeholder -->
            <i data-lucide="utensils" class="w-[90%] h-[90%] text-gray-500 object-cover"></i>
        }
    </a>

    <!-- Title and Info -->
    <div class="p-4">
        <a asp-controller="MealPlan" asp-action="Show" asp-route-id="@Model.Id"
            class="block text-2xl font-semibold line-clamp-2 text-gray-800 hover:text-orange-700 truncate">
            @Model.MealPlanTitle
        </a>
        <p class="text-gray-500 text-sm mt-1 md:text-lg">@Model.RecipeCount recipes</p>
    </div>

    @* <!-- Right Column: Buttons (List and Delete) -->
    <div class="flex flex-col justify-between flex-shrink-0 items-end h-full">
        <form asp-controller="MealPlan" asp-action="DeleteMealPlan" asp-route-id="@Model.Id" method="post"
            onsubmit="return confirm('Are you sure you want to delete this meal plan?');" class="ml-auto shrink-0 mb-3">
            @Html.AntiForgeryToken()
            <button type="submit"
                class="bg-orange-600 hover:bg-orange-400 text-white text-xs font-medium py-1 px-3 rounded-md shadow-md h-[25px] leading-none">
                Shopping List
            </button>
        </form>

        <form asp-controller="MealPlan" asp-action="DeleteMealPlan" asp-route-id="@Model.Id" method="post"
            onsubmit="return confirm('Are you sure you want to delete this meal plan?');" class="ml-auto shrink-0">
            @Html.AntiForgeryToken()
            <button type="submit"
                class="bg-red-500 hover:bg-red-600 text-white text-xs font-medium py-1 px-3 rounded-md shadow-md h-[25px] leading-none">
                Delete
            </button>
        </form>
    </div> *@
</div>


<script>
    lucide.createIcons();

    function toggleMenu(button) {
        const menu = button.nextElementSibling;
        document.querySelectorAll('.group .absolute.right-0').forEach(m => {
            if (m !== menu) m.classList.add('hidden');
        });
        menu.classList.toggle('hidden');
    }

    document.addEventListener('click', (e) => {
        if (!e.target.closest('.group')) {
            document.querySelectorAll('.group .absolute.right-0').forEach(m => m.classList.add('hidden'));
        }
    });
</script>

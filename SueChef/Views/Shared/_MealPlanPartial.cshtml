@model SueChef.ViewModels.MealPlanViewModel

<!-- Card Container -->
<div
    class="relative group hover:shadow-md w-full max-w-4xl bg-white rounded-lg overflow-hidden border-2 border-gray-200 flex flex-col justify-between p-3 md:p-3 transition-all duration-300 h-96" data-testid="meal-plan-container">

    <!-- 3 Dots Menu -->
    <div class="absolute top-2 right-2">
        <button type="button" class="text-gray-500 hover:text-gray-700 p-2 rounded-full transition" data-testid="three-dots-button-@Model.Id"
            onclick="toggleMenu(this)">
            <i data-lucide="more-horizontal" class="w-5 h-5"></i>
        </button>

        <!-- Hidden dropdown -->
        <div class="hidden absolute right-0 mt-2 w-40 bg-white border border-gray-200 rounded-lg shadow-lg z-10">

            <!-- Edit Button -->
            <button type="button"
                class="block items-center flex w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50" data-testid="edit-button-@Model.Id"
                onclick="openEditForm(@Model.Id, '@Model.MealPlanTitle')">
                <i data-lucide="pencil" class="w-6 h-6 text-gray-500 object-cover mr-2"></i>
                <p>Edit</p>
            </button>


            <!-- Shopping List Button -->
            <form asp-controller="MealPlan" asp-action="ShowShoppingList" asp-route-id="@Model.Id" method="get">
                <button type="submit"
                    class="block items-center flex w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50">
                    <i data-lucide="clipboard-list" class="w-6 h-6 text-gray-500 object-cover mr-2"></i>
                    <p class="">Shopping List</p>
                </button>
            </form>

            <!-- Delete Button -->
            <form asp-controller="MealPlan" asp-action="DeleteMealPlan" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <button type="submit"
                    class="block items-center flex w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50">
                    <i data-lucide="trash-2" class="w-6 h-6 text-gray-500 object-cover mr-2"></i>
                    <p class="">Delete</p>
                </button>
            </form>
        </div>
    </div>

    <!-- Left column: clickable image -->
    <a asp-controller="MealPlan" asp-action="Show" asp-route-id="@Model.Id"
        class="pt-6 px-6 md:pt-6 block w-full flex-grow h-[60%] overflow-hidden">

        <!-- Logic for choosing recipe images -->
        @if (Model.RecipePicturePaths != null && Model.RecipePicturePaths.Count > 0)
        {
            var imageCount = Model.RecipePicturePaths.Count;

            if (imageCount == 1)
            {
                <!-- Just one image fills the whole box: -->
                <img src="@Model.RecipePicturePaths[0]" alt="Meal Plan Image"
                    class="w-full h-full object-cover rounded-md border" />
            }

            else if (imageCount == 2)
            {
                <!-- Create 2x1 grid and display both images: -->
                <div class="grid grid-cols-2 grid-rows-1 w-full h-full rounded-md border-l border-b overflow-hidden">
                    @foreach (var path in Model.RecipePicturePaths.Take(4))
                    {
                        <div class="w-full h-full">
                            <img src="@path" alt="Recipe Image" class="w-full h-full object-cover border-t border-r" />
                        </div>
                    }
                </div>
            }

            else
            {
                <!-- Create a grid of up to 4 images -->
                <div class="grid grid-cols-2 grid-rows-2 w-full h-full border-l border-b overflow-hidden rounded-md">
                    @foreach (var path in Model.RecipePicturePaths.Take(4))
                    {
                        <div class="w-full h-full">
                            <img src="@path" alt="Recipe Image" class="w-full h-full object-cover border-t border-r" />
                        </div>
                    }

                    @if (imageCount == 3)
                    {
                        <!-- If only 3 recipes, add a placeholder for the 4th box -->
                        <div class="w-full h-full bg-gray-300 flex items-center justify-center">
                            <i data-lucide="utensils" class="w-10 h-10 text-gray-500 object-cover"></i>
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <!-- No recipes yet = just show placeholder -->
            <div class="bg-gray-200 w-full h-full flex flex-col items-center justify-center rounded-md">
                <i data-lucide="utensils" class="w-10 h-10 mb-2 text-gray-500 object-cover"></i>
                <span class="text-gray-500 text-lg font-medium">No recipes yet</span>
            </div>
        }
    </a>

    <!-- Title and Info -->
    <div class="px-6 pt-3 flex flex-col justify-between">
        <a asp-controller="MealPlan" asp-action="Show" asp-route-id="@Model.Id"
            class="block text-2xl font-semibold line-clamp-2 text-gray-800 hover:text-orange-700 truncate" id="meal-plan-title" data-testid="meal-plan-title-@Model.MealPlanTitle">
            @Model.MealPlanTitle
        </a>
    </div>
    <div class="px-6 py-2 flex justify-between">
        <span class="text-gray-500 text-lg md:text-lg">@Model.RecipeCount recipes</span>

        <span class="text-gray-500 text-lg md:text-lg" data-testid="updated-text-@Model.Id">Updated @Model.UpdatedOn?.ToString("dd/MM/yyyy")</span>
        </div>


</div>
<!-- Hidden edit form -->
<div id="editModal-@Model.Id" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 w-96 shadow-lg relative">
        <form asp-controller="MealPlan" asp-action="EditMealPlan" asp-route-id="@Model.Id" method="post">
            @Html.AntiForgeryToken()

            <h2 class="text-xl font-semibold mb-4 text-center">Edit Meal Plan</h2>

            <input type="text" name="newMealPlanTitle" id="edit-mealplan-input-@Model.Id"
                data-testid="mealplan-name-input-@Model.Id" class="border border-gray-300 rounded-md p-2 w-full text-center focus:outline-none focus:ring-1 focus:ring-gray-300 focus:border-gray-400
         focus:placeholder-white" placeholder="New Meal Plan Title" />

            <div class="flex justify-center gap-3 mt-4">
                <button type="button" onclick="closeEditForm(@Model.Id)"
                    class="w-28 bg-gray-200 text-gray-700 text-sm px-4 py-2 rounded-md border border-gray-300 hover:bg-gray-300 transition">
                    Cancel
                </button>
                <button id="submit-newplan" data-testid="edit-meal-plan-submit" type="submit"
                    class="w-28 bg-orange-600 text-white text-sm font-medium px-4 py-2 rounded-md hover:bg-orange-500 active:bg-orange-700 transition">
                    Save
                </button>
            </div>
        </form>
    </div>
</div>


<script>

    function toggleMenu(button) {
        const menu = button.nextElementSibling;
        document.querySelectorAll('.group .absolute.right-0').forEach(m => {
            if (m !== menu) m.classList.add('hidden');
        });
        menu.classList.toggle('hidden');
    }

    document.addEventListener('click', (e) => {
        if (!e.target.closest('.group')) {
            document.querySelectorAll('.group .absolute.right-0').forEach(m => m.classList.add('hidden'));
        }
    });
</script>

<script>
    function openEditForm(id, currentTitle) {
        const modal = document.getElementById(`editModal-${id}`);
        const input = document.getElementById(`edit-mealplan-input-${id}`);
        modal.classList.remove('hidden');
        input.value = currentTitle; // prefill with current title
        input.focus();
    }

    function closeEditForm(id) {
        const modal = document.getElementById(`editModal-${id}`);
        modal.classList.add('hidden');
    }

    document.addEventListener('click', (e) => {
        const modal = e.target.closest('[id^="editModal-"]');
        if (modal && e.target === modal) {
            modal.classList.add('hidden');
        }
    });
</script>
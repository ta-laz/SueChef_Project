@model SueChef.ViewModels.RecipeCardViewModel

<div class=" flex justify-center">
    <div
        class="hover:shadow-xl w-full max-w-6xl bg-white rounded-md overflow-hidden transition-all duration-300 border-2 border-gray-200 p-3 md:p-6 h-full">
        <a asp-controller="RecipeDetails" asp-action="Index" asp-route-id="@Model.Id"
            class="block transition-all duration-300 h-full">

            <div class="flex md:items-start gap-3 h-full">
                <!-- Left side: picture -->
                <div class="w-24 h-24 md:w-48 lg:w-56 flex-shrink-0">
                    <img src="@Model.RecipePicturePath" alt="@Model.Title" title="@Model.Title"
                        class="w-full h-full md:h-36 lg:h-40 object-cover rounded-md border border-gray-300" />
                </div>

                <!-- Right side: text -->
                <div class="flex flex-col md:w-[65%] flex-grow h-full">

                    <!-- Recipe Title -->
                    <div class="flex justify-between items-center" data-testid="recipe-title-div">
                        <h3
                            class="text-lg text-gray-700 md:text-xl lg:text-xl font-medium hover:text-orange-800 transition flex-1 mr-3 leading-tight line-clamp-2" data-testid="recipe-title-@Model.Title">
                            @Model.Title
                        </h3>
        </a>

        <!-- Add to Meal Plan Button -->
        @Html.AntiForgeryToken()
        <div>
            <button type="button"
                class="meal-plan-btn flex items-center justify-center bg-orange-500 hover:opacity-90 text-white w-8 h-8 shadow-sm rounded-full transition"
                aria-label="Add to favourites" aria-pressed="@(Model.IsFavourite ? "true" : "false")"
                data-recipe-id="@Model.Id" data-is-favourite="@(Model.IsFavourite ? "true" : "false")"
                onclick="toggleFavourite(this)">

                <!-- Heart Outline (when NOT favourited) -->
                <svg xmlns="http://www.w3.org/2000/svg"
                    class="w-4 h-4 heart-outline @(Model.IsFavourite ? "hidden" : "")" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3 c1.74 0 3.41.81 4.5 2.09 C13.09 3.81 14.76 3 16.5 3 C19.58 3 22 5.42 22 8.5 c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
                </svg>

                <!-- Heart Filled (when favourited) -->
                <svg xmlns="http://www.w3.org/2000/svg"
                    class="w-4 h-4 heart-filled @(Model.IsFavourite ? "" : "hidden")" fill="white" viewBox="0 0 24 24"
                    stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3 c1.74 0 3.41.81 4.5 2.09 C13.09 3.81 14.76 3 16.5 3 C19.58 3 22 5.42 22 8.5 c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
                </svg>
            </button>
        </div>

        <!-- Floating Message for when users try to favourite without being signed in -->
        <div id="floatingMessage" class="hidden fixed top-20 left-1/2 transform -translate-x-1/2
                bg-red-50 border border-red-400 text-red-700 rounded p-3 text-sm z-50">
        </div>

    </div>

    <!-- Stars -->
    <div class="flex items-center gap-1 mb-1 mt-1 text-yellow-400">
        @{
            double avg = Model.AverageRating ?? 0;
            int fullStars = (int)Math.Floor(avg);
            bool hasHalfStar = (avg - fullStars) >= 0.5;
        }

        @for (int i = 1; i <= 5; i++)
        {
            if (i <= fullStars)
            {
                <!-- full star -->
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-yellow-400 stroke-yellow-400" viewBox="0 0 24 24">
                    <path
                        d="M12 .587l3.668 7.431L24 9.751l-6 5.848 1.416 8.264L12 19.771l-7.416 4.092L6 15.599 0 9.751l8.332-1.733z" />
                </svg>
            }
            else if (i == fullStars + 1 && hasHalfStar)
            {
                <!-- half star -->
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-yellow-400 stroke-yellow-400" viewBox="0 0 24 24">
                    <defs>
                        <linearGradient id="half">
                            <stop offset="50%" stop-color="currentColor" />
                            <stop offset="50%" stop-color="transparent" />
                        </linearGradient>
                    </defs>
                    <path fill="url(#half)" stroke="currentColor"
                        d="M12 .587l3.668 7.431L24 9.751l-6 5.848 1.416 8.264L12 19.771l-7.416 4.092L6 15.599 0 9.751l8.332-1.733z" />
                </svg>
            }
            else
            {
                <!-- empty star -->
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 stroke-yellow-400" fill="none" viewBox="0 0 24 24"
                    stroke-width="2">
                    <path
                        d="M12 .587l3.668 7.431L24 9.751l-6 5.848 1.416 8.264L12 19.771l-7.416 4.092L6 15.599 0 9.751l8.332-1.733z" />
                </svg>
            }
        }

        @{
            string ratingText = $"{Model.RatingCount} rating{(Model.RatingCount != 1 ? "s" : "")}";
        }
        <div class="flex items-center text-gray-700 md:text-xl lg:text-lg ml-4">
            @ratingText
        </div>
    </div>

    <p class="recipe-card__description text-gray-600 line-clamp-2 break-words tracking-tight text-sm mt-1">
        @Model.Description
    </p>

    <div class="flex-grow"></div>

    <!-- Tags bar -->
    <div class="flex rounded-md justify-around items-center text-center gap-4 mt-1 md:mt-2">
        <!-- Time -->
        <div class="flex flex-col items-center w-1/4">
            <i data-lucide="clock" class="w-6 h-6 text-gray-500"></i>
            <span class="text-xs md:text-sm lg:text-md text-gray-500 truncate" data-testid="recipe-time">@Model.TotalTimeDisplay</span>
        </div>

        <!-- Difficulty -->
        <div class="flex flex-col items-center w-1/4">
            <i data-lucide="chef-hat" class="w-6 h-6 text-gray-500"></i>
            <span data-testid="difficulty-level"
                class="text-xs font-medium
                    @(Model.DifficultyLevel == 1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ? "text-green-600 md:text-sm lg:text-md"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        : Model.DifficultyLevel == 2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ? "text-orange-500 md:text-sm lg:text-md"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        : "text-red-600 md:text-sm lg:text-md")">
                @(Model.DifficultyLevel == 1 ? "Easy" :
                                Model.DifficultyLevel == 2 ? "Medium" : "Hard")
            </span>
        </div>
        <!-- Dairy Free -->
        @if (Model.IsDairyFree)
        {
            <div class="flex flex-col items-center w-1/4">
                <i data-lucide="milk-off" class="w-6 h-6 text-gray-500"></i>
                <span class="text-xs md:text-sm lg:text-md text-gray-500 truncate" data-testid="dairy-free-tag">Dairy Free</span>
            </div>
        }
        <!-- Vegetarian -->
        @if (Model.IsVegetarian)
        {
            <div class="flex flex-col items-center w-1/4">
                <i data-lucide="vegan" class="w-6 h-6 text-gray-500"></i>
                <span class="text-xs md:text-sm lg:text-md text-gray-500 truncate" data-testid="vegetarian-tag">Vegetarian</span>
            </div>
        }


    </div>
</div>
</div>
</div>
</div>
<!-- VIEW FOR ALL MEAL PLANS -->

@model SueChef.ViewModels.MealPlansPageViewModel

@{
    ViewData["Title"] = "Meal Plans Page";
}

<body class="bg-orange-50">

    <!-- Main central container -->
            <section class="relative w-full max-w-4xl mx-auto mb-4 overflow-hidden p-2">
        <div class="flex flex-col items-center justify-center w-full mb-6 mt-6 p-2 bg-orange-50 rounded-md">
            <div class="flex items-center justify-center space-x-3">
                <a asp-controller="Home" asp-action="Index"
                class="flex items-center justify-center w-9 h-9 rounded-full bg-orange-700 hover:bg-orange-600 transition shadow-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-white" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                        <path d="M12 3.172l8 6.364V20a1 1 0 0 1-1 1h-5v-6H10v6H5a1 1 0 0 1-1-1V9.536l8-6.364z"/>
                    </svg>
                </a>
                <h2 class="text-4xl tracking-tight text-gray-800" data-testid="meal-plans-page-title">Meal Plans</h2>
            </div>

            <!-- Subtitle: number of plans -->
            <p class="text-gray-600 text-lg mt-2" data-testid="number-of-meal-plans">
                @Model.MealPlanCount Plans
            </p>
        </div>


        <!-- Container for Success Messages: -->
        <div>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success flex items-center justify-center bg-green-100 border-l-4 border-green-600 text-green-800 p-2 rounded-md shadow mb-6">
                    <svg class="w-8 h-8 mr-2 text-green-600" fill="none" stroke="currentColor" stroke-width="2"viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round"d="M5 13l4 4L19 7" />
                    </svg>
                    <span class="font-medium">@TempData["SuccessMessage"]</span>
                    @if (TempData["DeletedMealPlanId"] != null)
                    {
                        <a asp-action="UndoDeleteMealPlan" asp-route-id="@TempData["DeletedMealPlanId"]" class="alert-link">
                            <button class="bg-orange-600 text-white text-sm font-medium w-20 px-3 py-1 rounded-md hover:bg-orange-400 m-2">
                                Undo
                            </button>
                        </a>
                    }
                </div>
            }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }
        </div>

        @* Error messages to display if post request unsuccessful *@
        <div asp-validation-summary="All" class="bg-red-50 border border-red-400 text-red-700 rounded p-3 mb-4 text-sm">
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-x-6 gap-y-6 auto-rows-96">
            <!-- Create new meal plan card -->
            <div id="create-card" data-testid="create-meal-plan-card" class="border-2 border-dashed border-gray-300 rounded-lg flex flex-col justify-center items-center 
            p-8 hover:bg-gray-50 hover:border-gray-400 transition cursor-pointer relative h-96">

                <!-- Default "Add" View -->
                <div id="add-view" data-testid="create-meal-plan-button" class="flex flex-col items-center ">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-10 h-10 text-gray-400 mb-2" fill="none"
                        viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
                    </svg>
                    <span class="text-gray-500 text-lg font-medium">Create a new meal plan</span>
                </div>

                <!-- Inline Form -->
                <form asp-action="Create" asp-controller="MealPlan" method="post" id="newplan-form"
                    data-testid="newplan-form" class="hidden w-full flex flex-col items-center mt-2">
                    @Html.AntiForgeryToken()

                    <input type="text" name="MealPlanTitle" id="newplan-name-input" data-testid="newplan-name-input"
                        class="border border-gray-300 rounded-md p-2 w-72 text-center focus:outline-none focus:ring-1 focus:ring-gray-300 focus:border-gray-400
         focus:placeholder-white" placeholder="New Meal Plan" />

                    <div class="flex justify-center gap-3 mt-4">
                        <button type="button" id="cancel-newplan" data-testid="cancel-newplan"
                            class="w-28 bg-gray-200 text-gray-700 text-sm px-4 py-2 rounded-md border border-gray-300 hover:bg-gray-300 transition">
                            Cancel
                        </button>
                        <button id="submit-newplan" data-testid="submit-newplan" type="submit"
                            class="w-28 bg-orange-600 text-white text-sm font-medium px-4 py-2 rounded-md hover:bg-orange-500 active:bg-orange-700 transition">
                            Save
                        </button>
                    </div>
                </form>
            </div>

            @if (Model.MealPlanCount == 0)
            {
                <!-- No meal plans yet -->
                <div id="no-meal-plans-card" data-testid="no-meal-plans-card" class="bg-white border-2 border-dashed border-gray-300 rounded-lg flex flex-col 
                            p-12 hover:bg-gray-50 hover:border-gray-400 transition cursor-pointer relative h-96">
                    <div id="no-meal-plans-yet" data-testid="no-meal-plans-text" class="flex flex-col items-center">
                        <i data-lucide="cooking-pot" class="w-20 h-20 mb-8 text-gray-400 object-cover"></i>
                        <span class="text-gray-700 text-lg font-semibold mb-8 text-center">You haven't created any meal
                            plans yet...</span>
                        <span class="text-gray-500 text-md font-medium text-center">Save and sort your favourite recipes
                            into meal plans then use our handy shopping list generator!</span>
                    </div>
                </div>
            }
            else
            {
                <!-- Existing meal plans -->
                    
                @foreach (var mealPlan in Model.MealPlans)
                {
                    <partial name="_MealPlanPartial" model="mealPlan" />
                }

            }
        </div>

    </section>



    <style>
        /* Hides the errors until there are errors */
        .validation-summary-valid {
            display: none;
        }

        .validation-summary-errors {
            display: block;
            /* adds the errors */
        }
    </style>


    @* Script to unhide form when creating new meal plan  *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const card = document.getElementById("create-card");
            const addView = document.getElementById("add-view");
            const form = document.getElementById("newplan-form");
            const cancel = document.getElementById("cancel-newplan");

            card.addEventListener("click", (e) => {
                // prevent click on inner form triggering toggle
                if (e.target.closest("form")) return;
                addView.classList.add("hidden");
                form.classList.remove("hidden");
            });

            cancel.addEventListener("click", (e) => {
                e.preventDefault();
                form.classList.add("hidden");
                addView.classList.remove("hidden");
            });
        });
    </script>

</body>